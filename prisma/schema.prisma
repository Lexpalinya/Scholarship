// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model About {
  id        String   @id @default(uuid()) @db.VarChar(36)
  isActive  Boolean  @default(true)
  title     String   @default("")
  images    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id              String   @id @default(uuid()) @db.VarChar(36)
  isActive        Boolean  @default(true)
  title           String   @default("")
  detail          String   @default("")
  isPublished     Boolean  @default(true)
  url_path        String[]
  document        String[]
  typescholarship String[]
  // services_id String   @db.VarChar(36)
  image           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  // services    Services @relation(fields: [services_id], references: [id])
}

model Comment {
  id          String   @id @default(uuid()) @db.VarChar(36)
  isActive    Boolean  @default(true)
  name        String
  email       String
  phoneNumber String   @default("")
  comment     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String     @id @default(uuid()) @db.VarChar(36)
  isActive  Boolean    @default(true)
  name      String
  userId    String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  services  Services[]
  user      User?      @relation(fields: [userId], references: [id])
}

model Services {
  id              String   @id @default(uuid()) @db.VarChar(36)
  title           String
  isActive        Boolean  @default(true)
  description     String
  file_url        String[]
  document        String[]
  typescholarship String[]
  category_id     String   @db.VarChar(36)
  image           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  category        Category @relation(fields: [category_id], references: [id])
  // banner      Banner[]
  // news        News[]
}

model News {
  id          String   @id @default(uuid()) @db.VarChar(36)
  isActive    Boolean  @default(true)
  title       String
  detail      String
  cover_image String?
  // services_id String   @db.VarChar(36)
  image       String[]
  // file_url  String   @default("")
  // start_time  DateTime
  // end_time    DateTime
  // services    Services @relation(fields: [services_id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          String     @id @default(uuid()) @db.VarChar(36)
  isActive    Boolean    @default(true)
  username    String
  email       String
  password    String
  firstName   String?
  lastName    String?
  phoneNumber String?
  role        UserRoles  @default(admin)
  profile     String     @default("")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Category    Category[]

  @@index([username])
  @@index([email])
}

model companyData {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  icon        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model coverImage {
  id        Int      @id @default(autoincrement())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model document {
  id        String   @id @default(uuid()) @db.VarChar(36)
  isActive  Boolean  @default(true)
  referid   String
  text      String[] @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model typeSholarship {
  id        String   @id @default(uuid()) @db.VarChar(36)
  isActive  Boolean  @default(true)
  referid   String
  text      String[] @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model userview {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
}

model totalDownloads {
  id        Int      @id @default(autoincrement())
  type      String
  createdAt DateTime @default(now())
}

enum UserRoles {
  admin
  superadmin
}
